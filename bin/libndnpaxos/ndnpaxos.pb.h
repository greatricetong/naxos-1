// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ndnpaxos.proto

#ifndef PROTOBUF_ndnpaxos_2eproto__INCLUDED
#define PROTOBUF_ndnpaxos_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ndnpaxos {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ndnpaxos_2eproto();
void protobuf_AssignDesc_ndnpaxos_2eproto();
void protobuf_ShutdownFile_ndnpaxos_2eproto();

class MsgAccept;
class MsgAckAccept;
class MsgAckPrepare;
class MsgCommand;
class MsgCommit;
class MsgDecide;
class MsgHeader;
class MsgLearn;
class MsgPeriodTryTime;
class MsgPrepare;
class MsgResult;
class MsgTeach;
class PropValue;

enum MsgType {
  PREPARE = 0,
  PROMISE = 1,
  ACCEPT = 2,
  ACCEPTED = 3,
  DECIDE = 4,
  LEARN = 5,
  TEACH = 6,
  COMMIT = 7,
  COMMAND = 8
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = PREPARE;
const MsgType MsgType_MAX = COMMAND;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
enum CmdType {
  SET_MASTER = 0,
  REPLY_DECIDE = 1,
  REPLY_TEACH = 2,
  SET_QUORUM = 3
};
bool CmdType_IsValid(int value);
const CmdType CmdType_MIN = SET_MASTER;
const CmdType CmdType_MAX = SET_QUORUM;
const int CmdType_ARRAYSIZE = CmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CmdType_descriptor();
inline const ::std::string& CmdType_Name(CmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CmdType_descriptor(), value);
}
inline bool CmdType_Parse(
    const ::std::string& name, CmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CmdType>(
    CmdType_descriptor(), name, value);
}
// ===================================================================

class MsgHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgHeader) */ {
 public:
  MsgHeader();
  virtual ~MsgHeader();

  MsgHeader(const MsgHeader& from);

  inline MsgHeader& operator=(const MsgHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHeader& default_instance();

  void Swap(MsgHeader* other);

  // implements Message ----------------------------------------------

  inline MsgHeader* New() const { return New(NULL); }

  MsgHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHeader& from);
  void MergeFrom(const MsgHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndnpaxos.MsgType msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::ndnpaxos::MsgType msg_type() const;
  void set_msg_type(::ndnpaxos::MsgType value);

  // required uint32 node_id = 2;
  bool has_node_id() const;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 2;
  ::google::protobuf::uint32 node_id() const;
  void set_node_id(::google::protobuf::uint32 value);

  // required uint64 slot_id = 3;
  bool has_slot_id() const;
  void clear_slot_id();
  static const int kSlotIdFieldNumber = 3;
  ::google::protobuf::uint64 slot_id() const;
  void set_slot_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgHeader)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_node_id();
  inline void clear_has_node_id();
  inline void set_has_slot_id();
  inline void clear_has_slot_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msg_type_;
  ::google::protobuf::uint32 node_id_;
  ::google::protobuf::uint64 slot_id_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgHeader* default_instance_;
};
// -------------------------------------------------------------------

class PropValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.PropValue) */ {
 public:
  PropValue();
  virtual ~PropValue();

  PropValue(const PropValue& from);

  inline PropValue& operator=(const PropValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropValue& default_instance();

  void Swap(PropValue* other);

  // implements Message ----------------------------------------------

  inline PropValue* New() const { return New(NULL); }

  PropValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropValue& from);
  void MergeFrom(const PropValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PropValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required string data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional .ndnpaxos.CmdType cmd_type = 3;
  bool has_cmd_type() const;
  void clear_cmd_type();
  static const int kCmdTypeFieldNumber = 3;
  ::ndnpaxos::CmdType cmd_type() const;
  void set_cmd_type(::ndnpaxos::CmdType value);

  // optional bool integrity = 4;
  bool has_integrity() const;
  void clear_integrity();
  static const int kIntegrityFieldNumber = 4;
  bool integrity() const;
  void set_integrity(bool value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.PropValue)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_cmd_type();
  inline void clear_has_cmd_type();
  inline void set_has_integrity();
  inline void clear_has_integrity();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  int cmd_type_;
  bool integrity_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static PropValue* default_instance_;
};
// -------------------------------------------------------------------

class MsgPrepare : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgPrepare) */ {
 public:
  MsgPrepare();
  virtual ~MsgPrepare();

  MsgPrepare(const MsgPrepare& from);

  inline MsgPrepare& operator=(const MsgPrepare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPrepare& default_instance();

  void Swap(MsgPrepare* other);

  // implements Message ----------------------------------------------

  inline MsgPrepare* New() const { return New(NULL); }

  MsgPrepare* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPrepare& from);
  void MergeFrom(const MsgPrepare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgPrepare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndnpaxos.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  const ::ndnpaxos::MsgHeader& msg_header() const;
  ::ndnpaxos::MsgHeader* mutable_msg_header();
  ::ndnpaxos::MsgHeader* release_msg_header();
  void set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header);

  // required uint64 ballot_id = 2;
  bool has_ballot_id() const;
  void clear_ballot_id();
  static const int kBallotIdFieldNumber = 2;
  ::google::protobuf::uint64 ballot_id() const;
  void set_ballot_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgPrepare)
 private:
  inline void set_has_msg_header();
  inline void clear_has_msg_header();
  inline void set_has_ballot_id();
  inline void clear_has_ballot_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndnpaxos::MsgHeader* msg_header_;
  ::google::protobuf::uint64 ballot_id_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgPrepare* default_instance_;
};
// -------------------------------------------------------------------

class MsgAckPrepare : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgAckPrepare) */ {
 public:
  MsgAckPrepare();
  virtual ~MsgAckPrepare();

  MsgAckPrepare(const MsgAckPrepare& from);

  inline MsgAckPrepare& operator=(const MsgAckPrepare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAckPrepare& default_instance();

  void Swap(MsgAckPrepare* other);

  // implements Message ----------------------------------------------

  inline MsgAckPrepare* New() const { return New(NULL); }

  MsgAckPrepare* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAckPrepare& from);
  void MergeFrom(const MsgAckPrepare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgAckPrepare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndnpaxos.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  const ::ndnpaxos::MsgHeader& msg_header() const;
  ::ndnpaxos::MsgHeader* mutable_msg_header();
  ::ndnpaxos::MsgHeader* release_msg_header();
  void set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header);

  // required uint64 ballot_id = 2;
  bool has_ballot_id() const;
  void clear_ballot_id();
  static const int kBallotIdFieldNumber = 2;
  ::google::protobuf::uint64 ballot_id() const;
  void set_ballot_id(::google::protobuf::uint64 value);

  // required bool reply = 3;
  bool has_reply() const;
  void clear_reply();
  static const int kReplyFieldNumber = 3;
  bool reply() const;
  void set_reply(bool value);

  // required uint64 max_ballot_id = 4;
  bool has_max_ballot_id() const;
  void clear_max_ballot_id();
  static const int kMaxBallotIdFieldNumber = 4;
  ::google::protobuf::uint64 max_ballot_id() const;
  void set_max_ballot_id(::google::protobuf::uint64 value);

  // optional .ndnpaxos.PropValue max_prop_value = 5;
  bool has_max_prop_value() const;
  void clear_max_prop_value();
  static const int kMaxPropValueFieldNumber = 5;
  const ::ndnpaxos::PropValue& max_prop_value() const;
  ::ndnpaxos::PropValue* mutable_max_prop_value();
  ::ndnpaxos::PropValue* release_max_prop_value();
  void set_allocated_max_prop_value(::ndnpaxos::PropValue* max_prop_value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgAckPrepare)
 private:
  inline void set_has_msg_header();
  inline void clear_has_msg_header();
  inline void set_has_ballot_id();
  inline void clear_has_ballot_id();
  inline void set_has_reply();
  inline void clear_has_reply();
  inline void set_has_max_ballot_id();
  inline void clear_has_max_ballot_id();
  inline void set_has_max_prop_value();
  inline void clear_has_max_prop_value();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndnpaxos::MsgHeader* msg_header_;
  ::google::protobuf::uint64 ballot_id_;
  ::google::protobuf::uint64 max_ballot_id_;
  ::ndnpaxos::PropValue* max_prop_value_;
  bool reply_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgAckPrepare* default_instance_;
};
// -------------------------------------------------------------------

class MsgAccept : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgAccept) */ {
 public:
  MsgAccept();
  virtual ~MsgAccept();

  MsgAccept(const MsgAccept& from);

  inline MsgAccept& operator=(const MsgAccept& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAccept& default_instance();

  void Swap(MsgAccept* other);

  // implements Message ----------------------------------------------

  inline MsgAccept* New() const { return New(NULL); }

  MsgAccept* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAccept& from);
  void MergeFrom(const MsgAccept& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgAccept* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndnpaxos.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  const ::ndnpaxos::MsgHeader& msg_header() const;
  ::ndnpaxos::MsgHeader* mutable_msg_header();
  ::ndnpaxos::MsgHeader* release_msg_header();
  void set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header);

  // required uint64 ballot_id = 2;
  bool has_ballot_id() const;
  void clear_ballot_id();
  static const int kBallotIdFieldNumber = 2;
  ::google::protobuf::uint64 ballot_id() const;
  void set_ballot_id(::google::protobuf::uint64 value);

  // required .ndnpaxos.PropValue prop_value = 3;
  bool has_prop_value() const;
  void clear_prop_value();
  static const int kPropValueFieldNumber = 3;
  const ::ndnpaxos::PropValue& prop_value() const;
  ::ndnpaxos::PropValue* mutable_prop_value();
  ::ndnpaxos::PropValue* release_prop_value();
  void set_allocated_prop_value(::ndnpaxos::PropValue* prop_value);

  // optional uint64 last_slot = 4;
  bool has_last_slot() const;
  void clear_last_slot();
  static const int kLastSlotFieldNumber = 4;
  ::google::protobuf::uint64 last_slot() const;
  void set_last_slot(::google::protobuf::uint64 value);

  // optional uint64 last_value = 5;
  bool has_last_value() const;
  void clear_last_value();
  static const int kLastValueFieldNumber = 5;
  ::google::protobuf::uint64 last_value() const;
  void set_last_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgAccept)
 private:
  inline void set_has_msg_header();
  inline void clear_has_msg_header();
  inline void set_has_ballot_id();
  inline void clear_has_ballot_id();
  inline void set_has_prop_value();
  inline void clear_has_prop_value();
  inline void set_has_last_slot();
  inline void clear_has_last_slot();
  inline void set_has_last_value();
  inline void clear_has_last_value();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndnpaxos::MsgHeader* msg_header_;
  ::google::protobuf::uint64 ballot_id_;
  ::ndnpaxos::PropValue* prop_value_;
  ::google::protobuf::uint64 last_slot_;
  ::google::protobuf::uint64 last_value_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgAccept* default_instance_;
};
// -------------------------------------------------------------------

class MsgAckAccept : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgAckAccept) */ {
 public:
  MsgAckAccept();
  virtual ~MsgAckAccept();

  MsgAckAccept(const MsgAckAccept& from);

  inline MsgAckAccept& operator=(const MsgAckAccept& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAckAccept& default_instance();

  void Swap(MsgAckAccept* other);

  // implements Message ----------------------------------------------

  inline MsgAckAccept* New() const { return New(NULL); }

  MsgAckAccept* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAckAccept& from);
  void MergeFrom(const MsgAckAccept& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgAckAccept* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndnpaxos.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  const ::ndnpaxos::MsgHeader& msg_header() const;
  ::ndnpaxos::MsgHeader* mutable_msg_header();
  ::ndnpaxos::MsgHeader* release_msg_header();
  void set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header);

  // required uint64 ballot_id = 2;
  bool has_ballot_id() const;
  void clear_ballot_id();
  static const int kBallotIdFieldNumber = 2;
  ::google::protobuf::uint64 ballot_id() const;
  void set_ballot_id(::google::protobuf::uint64 value);

  // required bool reply = 3;
  bool has_reply() const;
  void clear_reply();
  static const int kReplyFieldNumber = 3;
  bool reply() const;
  void set_reply(bool value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgAckAccept)
 private:
  inline void set_has_msg_header();
  inline void clear_has_msg_header();
  inline void set_has_ballot_id();
  inline void clear_has_ballot_id();
  inline void set_has_reply();
  inline void clear_has_reply();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndnpaxos::MsgHeader* msg_header_;
  ::google::protobuf::uint64 ballot_id_;
  bool reply_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgAckAccept* default_instance_;
};
// -------------------------------------------------------------------

class MsgDecide : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgDecide) */ {
 public:
  MsgDecide();
  virtual ~MsgDecide();

  MsgDecide(const MsgDecide& from);

  inline MsgDecide& operator=(const MsgDecide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDecide& default_instance();

  void Swap(MsgDecide* other);

  // implements Message ----------------------------------------------

  inline MsgDecide* New() const { return New(NULL); }

  MsgDecide* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDecide& from);
  void MergeFrom(const MsgDecide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgDecide* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndnpaxos.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  const ::ndnpaxos::MsgHeader& msg_header() const;
  ::ndnpaxos::MsgHeader* mutable_msg_header();
  ::ndnpaxos::MsgHeader* release_msg_header();
  void set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header);

  // required uint64 value_id = 2;
  bool has_value_id() const;
  void clear_value_id();
  static const int kValueIdFieldNumber = 2;
  ::google::protobuf::uint64 value_id() const;
  void set_value_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgDecide)
 private:
  inline void set_has_msg_header();
  inline void clear_has_msg_header();
  inline void set_has_value_id();
  inline void clear_has_value_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndnpaxos::MsgHeader* msg_header_;
  ::google::protobuf::uint64 value_id_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgDecide* default_instance_;
};
// -------------------------------------------------------------------

class MsgLearn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgLearn) */ {
 public:
  MsgLearn();
  virtual ~MsgLearn();

  MsgLearn(const MsgLearn& from);

  inline MsgLearn& operator=(const MsgLearn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLearn& default_instance();

  void Swap(MsgLearn* other);

  // implements Message ----------------------------------------------

  inline MsgLearn* New() const { return New(NULL); }

  MsgLearn* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLearn& from);
  void MergeFrom(const MsgLearn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgLearn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndnpaxos.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  const ::ndnpaxos::MsgHeader& msg_header() const;
  ::ndnpaxos::MsgHeader* mutable_msg_header();
  ::ndnpaxos::MsgHeader* release_msg_header();
  void set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgLearn)
 private:
  inline void set_has_msg_header();
  inline void clear_has_msg_header();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndnpaxos::MsgHeader* msg_header_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgLearn* default_instance_;
};
// -------------------------------------------------------------------

class MsgTeach : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgTeach) */ {
 public:
  MsgTeach();
  virtual ~MsgTeach();

  MsgTeach(const MsgTeach& from);

  inline MsgTeach& operator=(const MsgTeach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTeach& default_instance();

  void Swap(MsgTeach* other);

  // implements Message ----------------------------------------------

  inline MsgTeach* New() const { return New(NULL); }

  MsgTeach* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTeach& from);
  void MergeFrom(const MsgTeach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgTeach* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndnpaxos.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  const ::ndnpaxos::MsgHeader& msg_header() const;
  ::ndnpaxos::MsgHeader* mutable_msg_header();
  ::ndnpaxos::MsgHeader* release_msg_header();
  void set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header);

  // required .ndnpaxos.PropValue prop_value = 2;
  bool has_prop_value() const;
  void clear_prop_value();
  static const int kPropValueFieldNumber = 2;
  const ::ndnpaxos::PropValue& prop_value() const;
  ::ndnpaxos::PropValue* mutable_prop_value();
  ::ndnpaxos::PropValue* release_prop_value();
  void set_allocated_prop_value(::ndnpaxos::PropValue* prop_value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgTeach)
 private:
  inline void set_has_msg_header();
  inline void clear_has_msg_header();
  inline void set_has_prop_value();
  inline void clear_has_prop_value();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndnpaxos::MsgHeader* msg_header_;
  ::ndnpaxos::PropValue* prop_value_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgTeach* default_instance_;
};
// -------------------------------------------------------------------

class MsgCommit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgCommit) */ {
 public:
  MsgCommit();
  virtual ~MsgCommit();

  MsgCommit(const MsgCommit& from);

  inline MsgCommit& operator=(const MsgCommit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCommit& default_instance();

  void Swap(MsgCommit* other);

  // implements Message ----------------------------------------------

  inline MsgCommit* New() const { return New(NULL); }

  MsgCommit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCommit& from);
  void MergeFrom(const MsgCommit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCommit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndnpaxos.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  const ::ndnpaxos::MsgHeader& msg_header() const;
  ::ndnpaxos::MsgHeader* mutable_msg_header();
  ::ndnpaxos::MsgHeader* release_msg_header();
  void set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header);

  // required .ndnpaxos.PropValue prop_value = 2;
  bool has_prop_value() const;
  void clear_prop_value();
  static const int kPropValueFieldNumber = 2;
  const ::ndnpaxos::PropValue& prop_value() const;
  ::ndnpaxos::PropValue* mutable_prop_value();
  ::ndnpaxos::PropValue* release_prop_value();
  void set_allocated_prop_value(::ndnpaxos::PropValue* prop_value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgCommit)
 private:
  inline void set_has_msg_header();
  inline void clear_has_msg_header();
  inline void set_has_prop_value();
  inline void clear_has_prop_value();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndnpaxos::MsgHeader* msg_header_;
  ::ndnpaxos::PropValue* prop_value_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgCommit* default_instance_;
};
// -------------------------------------------------------------------

class MsgCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgCommand) */ {
 public:
  MsgCommand();
  virtual ~MsgCommand();

  MsgCommand(const MsgCommand& from);

  inline MsgCommand& operator=(const MsgCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCommand& default_instance();

  void Swap(MsgCommand* other);

  // implements Message ----------------------------------------------

  inline MsgCommand* New() const { return New(NULL); }

  MsgCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCommand& from);
  void MergeFrom(const MsgCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndnpaxos.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  const ::ndnpaxos::MsgHeader& msg_header() const;
  ::ndnpaxos::MsgHeader* mutable_msg_header();
  ::ndnpaxos::MsgHeader* release_msg_header();
  void set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header);

  // required .ndnpaxos.CmdType cmd_type = 2;
  bool has_cmd_type() const;
  void clear_cmd_type();
  static const int kCmdTypeFieldNumber = 2;
  ::ndnpaxos::CmdType cmd_type() const;
  void set_cmd_type(::ndnpaxos::CmdType value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgCommand)
 private:
  inline void set_has_msg_header();
  inline void clear_has_msg_header();
  inline void set_has_cmd_type();
  inline void clear_has_cmd_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndnpaxos::MsgHeader* msg_header_;
  int cmd_type_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgCommand* default_instance_;
};
// -------------------------------------------------------------------

class MsgPeriodTryTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgPeriodTryTime) */ {
 public:
  MsgPeriodTryTime();
  virtual ~MsgPeriodTryTime();

  MsgPeriodTryTime(const MsgPeriodTryTime& from);

  inline MsgPeriodTryTime& operator=(const MsgPeriodTryTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPeriodTryTime& default_instance();

  void Swap(MsgPeriodTryTime* other);

  // implements Message ----------------------------------------------

  inline MsgPeriodTryTime* New() const { return New(NULL); }

  MsgPeriodTryTime* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPeriodTryTime& from);
  void MergeFrom(const MsgPeriodTryTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgPeriodTryTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float percent = 1;
  bool has_percent() const;
  void clear_percent();
  static const int kPercentFieldNumber = 1;
  float percent() const;
  void set_percent(float value);

  // required uint32 period = 2;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 2;
  ::google::protobuf::uint32 period() const;
  void set_period(::google::protobuf::uint32 value);

  // required uint32 exe_period = 3;
  bool has_exe_period() const;
  void clear_exe_period();
  static const int kExePeriodFieldNumber = 3;
  ::google::protobuf::uint32 exe_period() const;
  void set_exe_period(::google::protobuf::uint32 value);

  // required uint32 try_time = 4;
  bool has_try_time() const;
  void clear_try_time();
  static const int kTryTimeFieldNumber = 4;
  ::google::protobuf::uint32 try_time() const;
  void set_try_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgPeriodTryTime)
 private:
  inline void set_has_percent();
  inline void clear_has_percent();
  inline void set_has_period();
  inline void clear_has_period();
  inline void set_has_exe_period();
  inline void clear_has_exe_period();
  inline void set_has_try_time();
  inline void clear_has_try_time();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float percent_;
  ::google::protobuf::uint32 period_;
  ::google::protobuf::uint32 exe_period_;
  ::google::protobuf::uint32 try_time_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgPeriodTryTime* default_instance_;
};
// -------------------------------------------------------------------

class MsgResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ndnpaxos.MsgResult) */ {
 public:
  MsgResult();
  virtual ~MsgResult();

  MsgResult(const MsgResult& from);

  inline MsgResult& operator=(const MsgResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgResult& default_instance();

  void Swap(MsgResult* other);

  // implements Message ----------------------------------------------

  inline MsgResult* New() const { return New(NULL); }

  MsgResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgResult& from);
  void MergeFrom(const MsgResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 throughput = 1;
  bool has_throughput() const;
  void clear_throughput();
  static const int kThroughputFieldNumber = 1;
  ::google::protobuf::uint32 throughput() const;
  void set_throughput(::google::protobuf::uint32 value);

  // repeated .ndnpaxos.MsgPeriodTryTime msg_ptt = 2;
  int msg_ptt_size() const;
  void clear_msg_ptt();
  static const int kMsgPttFieldNumber = 2;
  const ::ndnpaxos::MsgPeriodTryTime& msg_ptt(int index) const;
  ::ndnpaxos::MsgPeriodTryTime* mutable_msg_ptt(int index);
  ::ndnpaxos::MsgPeriodTryTime* add_msg_ptt();
  ::google::protobuf::RepeatedPtrField< ::ndnpaxos::MsgPeriodTryTime >*
      mutable_msg_ptt();
  const ::google::protobuf::RepeatedPtrField< ::ndnpaxos::MsgPeriodTryTime >&
      msg_ptt() const;

  // @@protoc_insertion_point(class_scope:ndnpaxos.MsgResult)
 private:
  inline void set_has_throughput();
  inline void clear_has_throughput();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ndnpaxos::MsgPeriodTryTime > msg_ptt_;
  ::google::protobuf::uint32 throughput_;
  friend void  protobuf_AddDesc_ndnpaxos_2eproto();
  friend void protobuf_AssignDesc_ndnpaxos_2eproto();
  friend void protobuf_ShutdownFile_ndnpaxos_2eproto();

  void InitAsDefaultInstance();
  static MsgResult* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgHeader

// required .ndnpaxos.MsgType msg_type = 1;
inline bool MsgHeader::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgHeader::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgHeader::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgHeader::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::ndnpaxos::MsgType MsgHeader::msg_type() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgHeader.msg_type)
  return static_cast< ::ndnpaxos::MsgType >(msg_type_);
}
inline void MsgHeader::set_msg_type(::ndnpaxos::MsgType value) {
  assert(::ndnpaxos::MsgType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgHeader.msg_type)
}

// required uint32 node_id = 2;
inline bool MsgHeader::has_node_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgHeader::set_has_node_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgHeader::clear_has_node_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgHeader::clear_node_id() {
  node_id_ = 0u;
  clear_has_node_id();
}
inline ::google::protobuf::uint32 MsgHeader::node_id() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgHeader.node_id)
  return node_id_;
}
inline void MsgHeader::set_node_id(::google::protobuf::uint32 value) {
  set_has_node_id();
  node_id_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgHeader.node_id)
}

// required uint64 slot_id = 3;
inline bool MsgHeader::has_slot_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgHeader::set_has_slot_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgHeader::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgHeader::clear_slot_id() {
  slot_id_ = GOOGLE_ULONGLONG(0);
  clear_has_slot_id();
}
inline ::google::protobuf::uint64 MsgHeader::slot_id() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgHeader.slot_id)
  return slot_id_;
}
inline void MsgHeader::set_slot_id(::google::protobuf::uint64 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgHeader.slot_id)
}

// -------------------------------------------------------------------

// PropValue

// required uint64 id = 1;
inline bool PropValue::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropValue::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropValue::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropValue::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 PropValue::id() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.PropValue.id)
  return id_;
}
inline void PropValue::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.PropValue.id)
}

// required string data = 2;
inline bool PropValue::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PropValue::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PropValue::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PropValue::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& PropValue::data() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.PropValue.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PropValue::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ndnpaxos.PropValue.data)
}
inline void PropValue::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ndnpaxos.PropValue.data)
}
inline void PropValue::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ndnpaxos.PropValue.data)
}
inline ::std::string* PropValue::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:ndnpaxos.PropValue.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PropValue::release_data() {
  // @@protoc_insertion_point(field_release:ndnpaxos.PropValue.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PropValue::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.PropValue.data)
}

// optional .ndnpaxos.CmdType cmd_type = 3;
inline bool PropValue::has_cmd_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PropValue::set_has_cmd_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PropValue::clear_has_cmd_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PropValue::clear_cmd_type() {
  cmd_type_ = 0;
  clear_has_cmd_type();
}
inline ::ndnpaxos::CmdType PropValue::cmd_type() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.PropValue.cmd_type)
  return static_cast< ::ndnpaxos::CmdType >(cmd_type_);
}
inline void PropValue::set_cmd_type(::ndnpaxos::CmdType value) {
  assert(::ndnpaxos::CmdType_IsValid(value));
  set_has_cmd_type();
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.PropValue.cmd_type)
}

// optional bool integrity = 4;
inline bool PropValue::has_integrity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PropValue::set_has_integrity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PropValue::clear_has_integrity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PropValue::clear_integrity() {
  integrity_ = false;
  clear_has_integrity();
}
inline bool PropValue::integrity() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.PropValue.integrity)
  return integrity_;
}
inline void PropValue::set_integrity(bool value) {
  set_has_integrity();
  integrity_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.PropValue.integrity)
}

// -------------------------------------------------------------------

// MsgPrepare

// required .ndnpaxos.MsgHeader msg_header = 1;
inline bool MsgPrepare::has_msg_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPrepare::set_has_msg_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPrepare::clear_has_msg_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPrepare::clear_msg_header() {
  if (msg_header_ != NULL) msg_header_->::ndnpaxos::MsgHeader::Clear();
  clear_has_msg_header();
}
inline const ::ndnpaxos::MsgHeader& MsgPrepare::msg_header() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgPrepare.msg_header)
  return msg_header_ != NULL ? *msg_header_ : *default_instance_->msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgPrepare::mutable_msg_header() {
  set_has_msg_header();
  if (msg_header_ == NULL) {
    msg_header_ = new ::ndnpaxos::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgPrepare.msg_header)
  return msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgPrepare::release_msg_header() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgPrepare.msg_header)
  clear_has_msg_header();
  ::ndnpaxos::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline void MsgPrepare::set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header) {
  delete msg_header_;
  msg_header_ = msg_header;
  if (msg_header) {
    set_has_msg_header();
  } else {
    clear_has_msg_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgPrepare.msg_header)
}

// required uint64 ballot_id = 2;
inline bool MsgPrepare::has_ballot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPrepare::set_has_ballot_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPrepare::clear_has_ballot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPrepare::clear_ballot_id() {
  ballot_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ballot_id();
}
inline ::google::protobuf::uint64 MsgPrepare::ballot_id() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgPrepare.ballot_id)
  return ballot_id_;
}
inline void MsgPrepare::set_ballot_id(::google::protobuf::uint64 value) {
  set_has_ballot_id();
  ballot_id_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgPrepare.ballot_id)
}

// -------------------------------------------------------------------

// MsgAckPrepare

// required .ndnpaxos.MsgHeader msg_header = 1;
inline bool MsgAckPrepare::has_msg_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgAckPrepare::set_has_msg_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgAckPrepare::clear_has_msg_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgAckPrepare::clear_msg_header() {
  if (msg_header_ != NULL) msg_header_->::ndnpaxos::MsgHeader::Clear();
  clear_has_msg_header();
}
inline const ::ndnpaxos::MsgHeader& MsgAckPrepare::msg_header() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAckPrepare.msg_header)
  return msg_header_ != NULL ? *msg_header_ : *default_instance_->msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgAckPrepare::mutable_msg_header() {
  set_has_msg_header();
  if (msg_header_ == NULL) {
    msg_header_ = new ::ndnpaxos::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgAckPrepare.msg_header)
  return msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgAckPrepare::release_msg_header() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgAckPrepare.msg_header)
  clear_has_msg_header();
  ::ndnpaxos::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline void MsgAckPrepare::set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header) {
  delete msg_header_;
  msg_header_ = msg_header;
  if (msg_header) {
    set_has_msg_header();
  } else {
    clear_has_msg_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgAckPrepare.msg_header)
}

// required uint64 ballot_id = 2;
inline bool MsgAckPrepare::has_ballot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgAckPrepare::set_has_ballot_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgAckPrepare::clear_has_ballot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgAckPrepare::clear_ballot_id() {
  ballot_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ballot_id();
}
inline ::google::protobuf::uint64 MsgAckPrepare::ballot_id() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAckPrepare.ballot_id)
  return ballot_id_;
}
inline void MsgAckPrepare::set_ballot_id(::google::protobuf::uint64 value) {
  set_has_ballot_id();
  ballot_id_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgAckPrepare.ballot_id)
}

// required bool reply = 3;
inline bool MsgAckPrepare::has_reply() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgAckPrepare::set_has_reply() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgAckPrepare::clear_has_reply() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgAckPrepare::clear_reply() {
  reply_ = false;
  clear_has_reply();
}
inline bool MsgAckPrepare::reply() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAckPrepare.reply)
  return reply_;
}
inline void MsgAckPrepare::set_reply(bool value) {
  set_has_reply();
  reply_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgAckPrepare.reply)
}

// required uint64 max_ballot_id = 4;
inline bool MsgAckPrepare::has_max_ballot_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgAckPrepare::set_has_max_ballot_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgAckPrepare::clear_has_max_ballot_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgAckPrepare::clear_max_ballot_id() {
  max_ballot_id_ = GOOGLE_ULONGLONG(0);
  clear_has_max_ballot_id();
}
inline ::google::protobuf::uint64 MsgAckPrepare::max_ballot_id() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAckPrepare.max_ballot_id)
  return max_ballot_id_;
}
inline void MsgAckPrepare::set_max_ballot_id(::google::protobuf::uint64 value) {
  set_has_max_ballot_id();
  max_ballot_id_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgAckPrepare.max_ballot_id)
}

// optional .ndnpaxos.PropValue max_prop_value = 5;
inline bool MsgAckPrepare::has_max_prop_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgAckPrepare::set_has_max_prop_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgAckPrepare::clear_has_max_prop_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgAckPrepare::clear_max_prop_value() {
  if (max_prop_value_ != NULL) max_prop_value_->::ndnpaxos::PropValue::Clear();
  clear_has_max_prop_value();
}
inline const ::ndnpaxos::PropValue& MsgAckPrepare::max_prop_value() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAckPrepare.max_prop_value)
  return max_prop_value_ != NULL ? *max_prop_value_ : *default_instance_->max_prop_value_;
}
inline ::ndnpaxos::PropValue* MsgAckPrepare::mutable_max_prop_value() {
  set_has_max_prop_value();
  if (max_prop_value_ == NULL) {
    max_prop_value_ = new ::ndnpaxos::PropValue;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgAckPrepare.max_prop_value)
  return max_prop_value_;
}
inline ::ndnpaxos::PropValue* MsgAckPrepare::release_max_prop_value() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgAckPrepare.max_prop_value)
  clear_has_max_prop_value();
  ::ndnpaxos::PropValue* temp = max_prop_value_;
  max_prop_value_ = NULL;
  return temp;
}
inline void MsgAckPrepare::set_allocated_max_prop_value(::ndnpaxos::PropValue* max_prop_value) {
  delete max_prop_value_;
  max_prop_value_ = max_prop_value;
  if (max_prop_value) {
    set_has_max_prop_value();
  } else {
    clear_has_max_prop_value();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgAckPrepare.max_prop_value)
}

// -------------------------------------------------------------------

// MsgAccept

// required .ndnpaxos.MsgHeader msg_header = 1;
inline bool MsgAccept::has_msg_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgAccept::set_has_msg_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgAccept::clear_has_msg_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgAccept::clear_msg_header() {
  if (msg_header_ != NULL) msg_header_->::ndnpaxos::MsgHeader::Clear();
  clear_has_msg_header();
}
inline const ::ndnpaxos::MsgHeader& MsgAccept::msg_header() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAccept.msg_header)
  return msg_header_ != NULL ? *msg_header_ : *default_instance_->msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgAccept::mutable_msg_header() {
  set_has_msg_header();
  if (msg_header_ == NULL) {
    msg_header_ = new ::ndnpaxos::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgAccept.msg_header)
  return msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgAccept::release_msg_header() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgAccept.msg_header)
  clear_has_msg_header();
  ::ndnpaxos::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline void MsgAccept::set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header) {
  delete msg_header_;
  msg_header_ = msg_header;
  if (msg_header) {
    set_has_msg_header();
  } else {
    clear_has_msg_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgAccept.msg_header)
}

// required uint64 ballot_id = 2;
inline bool MsgAccept::has_ballot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgAccept::set_has_ballot_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgAccept::clear_has_ballot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgAccept::clear_ballot_id() {
  ballot_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ballot_id();
}
inline ::google::protobuf::uint64 MsgAccept::ballot_id() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAccept.ballot_id)
  return ballot_id_;
}
inline void MsgAccept::set_ballot_id(::google::protobuf::uint64 value) {
  set_has_ballot_id();
  ballot_id_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgAccept.ballot_id)
}

// required .ndnpaxos.PropValue prop_value = 3;
inline bool MsgAccept::has_prop_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgAccept::set_has_prop_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgAccept::clear_has_prop_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgAccept::clear_prop_value() {
  if (prop_value_ != NULL) prop_value_->::ndnpaxos::PropValue::Clear();
  clear_has_prop_value();
}
inline const ::ndnpaxos::PropValue& MsgAccept::prop_value() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAccept.prop_value)
  return prop_value_ != NULL ? *prop_value_ : *default_instance_->prop_value_;
}
inline ::ndnpaxos::PropValue* MsgAccept::mutable_prop_value() {
  set_has_prop_value();
  if (prop_value_ == NULL) {
    prop_value_ = new ::ndnpaxos::PropValue;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgAccept.prop_value)
  return prop_value_;
}
inline ::ndnpaxos::PropValue* MsgAccept::release_prop_value() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgAccept.prop_value)
  clear_has_prop_value();
  ::ndnpaxos::PropValue* temp = prop_value_;
  prop_value_ = NULL;
  return temp;
}
inline void MsgAccept::set_allocated_prop_value(::ndnpaxos::PropValue* prop_value) {
  delete prop_value_;
  prop_value_ = prop_value;
  if (prop_value) {
    set_has_prop_value();
  } else {
    clear_has_prop_value();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgAccept.prop_value)
}

// optional uint64 last_slot = 4;
inline bool MsgAccept::has_last_slot() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgAccept::set_has_last_slot() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgAccept::clear_has_last_slot() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgAccept::clear_last_slot() {
  last_slot_ = GOOGLE_ULONGLONG(0);
  clear_has_last_slot();
}
inline ::google::protobuf::uint64 MsgAccept::last_slot() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAccept.last_slot)
  return last_slot_;
}
inline void MsgAccept::set_last_slot(::google::protobuf::uint64 value) {
  set_has_last_slot();
  last_slot_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgAccept.last_slot)
}

// optional uint64 last_value = 5;
inline bool MsgAccept::has_last_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgAccept::set_has_last_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgAccept::clear_has_last_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgAccept::clear_last_value() {
  last_value_ = GOOGLE_ULONGLONG(0);
  clear_has_last_value();
}
inline ::google::protobuf::uint64 MsgAccept::last_value() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAccept.last_value)
  return last_value_;
}
inline void MsgAccept::set_last_value(::google::protobuf::uint64 value) {
  set_has_last_value();
  last_value_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgAccept.last_value)
}

// -------------------------------------------------------------------

// MsgAckAccept

// required .ndnpaxos.MsgHeader msg_header = 1;
inline bool MsgAckAccept::has_msg_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgAckAccept::set_has_msg_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgAckAccept::clear_has_msg_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgAckAccept::clear_msg_header() {
  if (msg_header_ != NULL) msg_header_->::ndnpaxos::MsgHeader::Clear();
  clear_has_msg_header();
}
inline const ::ndnpaxos::MsgHeader& MsgAckAccept::msg_header() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAckAccept.msg_header)
  return msg_header_ != NULL ? *msg_header_ : *default_instance_->msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgAckAccept::mutable_msg_header() {
  set_has_msg_header();
  if (msg_header_ == NULL) {
    msg_header_ = new ::ndnpaxos::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgAckAccept.msg_header)
  return msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgAckAccept::release_msg_header() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgAckAccept.msg_header)
  clear_has_msg_header();
  ::ndnpaxos::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline void MsgAckAccept::set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header) {
  delete msg_header_;
  msg_header_ = msg_header;
  if (msg_header) {
    set_has_msg_header();
  } else {
    clear_has_msg_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgAckAccept.msg_header)
}

// required uint64 ballot_id = 2;
inline bool MsgAckAccept::has_ballot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgAckAccept::set_has_ballot_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgAckAccept::clear_has_ballot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgAckAccept::clear_ballot_id() {
  ballot_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ballot_id();
}
inline ::google::protobuf::uint64 MsgAckAccept::ballot_id() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAckAccept.ballot_id)
  return ballot_id_;
}
inline void MsgAckAccept::set_ballot_id(::google::protobuf::uint64 value) {
  set_has_ballot_id();
  ballot_id_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgAckAccept.ballot_id)
}

// required bool reply = 3;
inline bool MsgAckAccept::has_reply() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgAckAccept::set_has_reply() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgAckAccept::clear_has_reply() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgAckAccept::clear_reply() {
  reply_ = false;
  clear_has_reply();
}
inline bool MsgAckAccept::reply() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgAckAccept.reply)
  return reply_;
}
inline void MsgAckAccept::set_reply(bool value) {
  set_has_reply();
  reply_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgAckAccept.reply)
}

// -------------------------------------------------------------------

// MsgDecide

// required .ndnpaxos.MsgHeader msg_header = 1;
inline bool MsgDecide::has_msg_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgDecide::set_has_msg_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgDecide::clear_has_msg_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgDecide::clear_msg_header() {
  if (msg_header_ != NULL) msg_header_->::ndnpaxos::MsgHeader::Clear();
  clear_has_msg_header();
}
inline const ::ndnpaxos::MsgHeader& MsgDecide::msg_header() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgDecide.msg_header)
  return msg_header_ != NULL ? *msg_header_ : *default_instance_->msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgDecide::mutable_msg_header() {
  set_has_msg_header();
  if (msg_header_ == NULL) {
    msg_header_ = new ::ndnpaxos::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgDecide.msg_header)
  return msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgDecide::release_msg_header() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgDecide.msg_header)
  clear_has_msg_header();
  ::ndnpaxos::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline void MsgDecide::set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header) {
  delete msg_header_;
  msg_header_ = msg_header;
  if (msg_header) {
    set_has_msg_header();
  } else {
    clear_has_msg_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgDecide.msg_header)
}

// required uint64 value_id = 2;
inline bool MsgDecide::has_value_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgDecide::set_has_value_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgDecide::clear_has_value_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgDecide::clear_value_id() {
  value_id_ = GOOGLE_ULONGLONG(0);
  clear_has_value_id();
}
inline ::google::protobuf::uint64 MsgDecide::value_id() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgDecide.value_id)
  return value_id_;
}
inline void MsgDecide::set_value_id(::google::protobuf::uint64 value) {
  set_has_value_id();
  value_id_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgDecide.value_id)
}

// -------------------------------------------------------------------

// MsgLearn

// required .ndnpaxos.MsgHeader msg_header = 1;
inline bool MsgLearn::has_msg_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLearn::set_has_msg_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLearn::clear_has_msg_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLearn::clear_msg_header() {
  if (msg_header_ != NULL) msg_header_->::ndnpaxos::MsgHeader::Clear();
  clear_has_msg_header();
}
inline const ::ndnpaxos::MsgHeader& MsgLearn::msg_header() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgLearn.msg_header)
  return msg_header_ != NULL ? *msg_header_ : *default_instance_->msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgLearn::mutable_msg_header() {
  set_has_msg_header();
  if (msg_header_ == NULL) {
    msg_header_ = new ::ndnpaxos::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgLearn.msg_header)
  return msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgLearn::release_msg_header() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgLearn.msg_header)
  clear_has_msg_header();
  ::ndnpaxos::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline void MsgLearn::set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header) {
  delete msg_header_;
  msg_header_ = msg_header;
  if (msg_header) {
    set_has_msg_header();
  } else {
    clear_has_msg_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgLearn.msg_header)
}

// -------------------------------------------------------------------

// MsgTeach

// required .ndnpaxos.MsgHeader msg_header = 1;
inline bool MsgTeach::has_msg_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgTeach::set_has_msg_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgTeach::clear_has_msg_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgTeach::clear_msg_header() {
  if (msg_header_ != NULL) msg_header_->::ndnpaxos::MsgHeader::Clear();
  clear_has_msg_header();
}
inline const ::ndnpaxos::MsgHeader& MsgTeach::msg_header() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgTeach.msg_header)
  return msg_header_ != NULL ? *msg_header_ : *default_instance_->msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgTeach::mutable_msg_header() {
  set_has_msg_header();
  if (msg_header_ == NULL) {
    msg_header_ = new ::ndnpaxos::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgTeach.msg_header)
  return msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgTeach::release_msg_header() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgTeach.msg_header)
  clear_has_msg_header();
  ::ndnpaxos::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline void MsgTeach::set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header) {
  delete msg_header_;
  msg_header_ = msg_header;
  if (msg_header) {
    set_has_msg_header();
  } else {
    clear_has_msg_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgTeach.msg_header)
}

// required .ndnpaxos.PropValue prop_value = 2;
inline bool MsgTeach::has_prop_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgTeach::set_has_prop_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgTeach::clear_has_prop_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgTeach::clear_prop_value() {
  if (prop_value_ != NULL) prop_value_->::ndnpaxos::PropValue::Clear();
  clear_has_prop_value();
}
inline const ::ndnpaxos::PropValue& MsgTeach::prop_value() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgTeach.prop_value)
  return prop_value_ != NULL ? *prop_value_ : *default_instance_->prop_value_;
}
inline ::ndnpaxos::PropValue* MsgTeach::mutable_prop_value() {
  set_has_prop_value();
  if (prop_value_ == NULL) {
    prop_value_ = new ::ndnpaxos::PropValue;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgTeach.prop_value)
  return prop_value_;
}
inline ::ndnpaxos::PropValue* MsgTeach::release_prop_value() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgTeach.prop_value)
  clear_has_prop_value();
  ::ndnpaxos::PropValue* temp = prop_value_;
  prop_value_ = NULL;
  return temp;
}
inline void MsgTeach::set_allocated_prop_value(::ndnpaxos::PropValue* prop_value) {
  delete prop_value_;
  prop_value_ = prop_value;
  if (prop_value) {
    set_has_prop_value();
  } else {
    clear_has_prop_value();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgTeach.prop_value)
}

// -------------------------------------------------------------------

// MsgCommit

// required .ndnpaxos.MsgHeader msg_header = 1;
inline bool MsgCommit::has_msg_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCommit::set_has_msg_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCommit::clear_has_msg_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCommit::clear_msg_header() {
  if (msg_header_ != NULL) msg_header_->::ndnpaxos::MsgHeader::Clear();
  clear_has_msg_header();
}
inline const ::ndnpaxos::MsgHeader& MsgCommit::msg_header() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgCommit.msg_header)
  return msg_header_ != NULL ? *msg_header_ : *default_instance_->msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgCommit::mutable_msg_header() {
  set_has_msg_header();
  if (msg_header_ == NULL) {
    msg_header_ = new ::ndnpaxos::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgCommit.msg_header)
  return msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgCommit::release_msg_header() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgCommit.msg_header)
  clear_has_msg_header();
  ::ndnpaxos::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline void MsgCommit::set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header) {
  delete msg_header_;
  msg_header_ = msg_header;
  if (msg_header) {
    set_has_msg_header();
  } else {
    clear_has_msg_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgCommit.msg_header)
}

// required .ndnpaxos.PropValue prop_value = 2;
inline bool MsgCommit::has_prop_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCommit::set_has_prop_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgCommit::clear_has_prop_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgCommit::clear_prop_value() {
  if (prop_value_ != NULL) prop_value_->::ndnpaxos::PropValue::Clear();
  clear_has_prop_value();
}
inline const ::ndnpaxos::PropValue& MsgCommit::prop_value() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgCommit.prop_value)
  return prop_value_ != NULL ? *prop_value_ : *default_instance_->prop_value_;
}
inline ::ndnpaxos::PropValue* MsgCommit::mutable_prop_value() {
  set_has_prop_value();
  if (prop_value_ == NULL) {
    prop_value_ = new ::ndnpaxos::PropValue;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgCommit.prop_value)
  return prop_value_;
}
inline ::ndnpaxos::PropValue* MsgCommit::release_prop_value() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgCommit.prop_value)
  clear_has_prop_value();
  ::ndnpaxos::PropValue* temp = prop_value_;
  prop_value_ = NULL;
  return temp;
}
inline void MsgCommit::set_allocated_prop_value(::ndnpaxos::PropValue* prop_value) {
  delete prop_value_;
  prop_value_ = prop_value;
  if (prop_value) {
    set_has_prop_value();
  } else {
    clear_has_prop_value();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgCommit.prop_value)
}

// -------------------------------------------------------------------

// MsgCommand

// required .ndnpaxos.MsgHeader msg_header = 1;
inline bool MsgCommand::has_msg_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCommand::set_has_msg_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCommand::clear_has_msg_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCommand::clear_msg_header() {
  if (msg_header_ != NULL) msg_header_->::ndnpaxos::MsgHeader::Clear();
  clear_has_msg_header();
}
inline const ::ndnpaxos::MsgHeader& MsgCommand::msg_header() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgCommand.msg_header)
  return msg_header_ != NULL ? *msg_header_ : *default_instance_->msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgCommand::mutable_msg_header() {
  set_has_msg_header();
  if (msg_header_ == NULL) {
    msg_header_ = new ::ndnpaxos::MsgHeader;
  }
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgCommand.msg_header)
  return msg_header_;
}
inline ::ndnpaxos::MsgHeader* MsgCommand::release_msg_header() {
  // @@protoc_insertion_point(field_release:ndnpaxos.MsgCommand.msg_header)
  clear_has_msg_header();
  ::ndnpaxos::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline void MsgCommand::set_allocated_msg_header(::ndnpaxos::MsgHeader* msg_header) {
  delete msg_header_;
  msg_header_ = msg_header;
  if (msg_header) {
    set_has_msg_header();
  } else {
    clear_has_msg_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ndnpaxos.MsgCommand.msg_header)
}

// required .ndnpaxos.CmdType cmd_type = 2;
inline bool MsgCommand::has_cmd_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCommand::set_has_cmd_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgCommand::clear_has_cmd_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgCommand::clear_cmd_type() {
  cmd_type_ = 0;
  clear_has_cmd_type();
}
inline ::ndnpaxos::CmdType MsgCommand::cmd_type() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgCommand.cmd_type)
  return static_cast< ::ndnpaxos::CmdType >(cmd_type_);
}
inline void MsgCommand::set_cmd_type(::ndnpaxos::CmdType value) {
  assert(::ndnpaxos::CmdType_IsValid(value));
  set_has_cmd_type();
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgCommand.cmd_type)
}

// -------------------------------------------------------------------

// MsgPeriodTryTime

// required float percent = 1;
inline bool MsgPeriodTryTime::has_percent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPeriodTryTime::set_has_percent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPeriodTryTime::clear_has_percent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPeriodTryTime::clear_percent() {
  percent_ = 0;
  clear_has_percent();
}
inline float MsgPeriodTryTime::percent() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgPeriodTryTime.percent)
  return percent_;
}
inline void MsgPeriodTryTime::set_percent(float value) {
  set_has_percent();
  percent_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgPeriodTryTime.percent)
}

// required uint32 period = 2;
inline bool MsgPeriodTryTime::has_period() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPeriodTryTime::set_has_period() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPeriodTryTime::clear_has_period() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPeriodTryTime::clear_period() {
  period_ = 0u;
  clear_has_period();
}
inline ::google::protobuf::uint32 MsgPeriodTryTime::period() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgPeriodTryTime.period)
  return period_;
}
inline void MsgPeriodTryTime::set_period(::google::protobuf::uint32 value) {
  set_has_period();
  period_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgPeriodTryTime.period)
}

// required uint32 exe_period = 3;
inline bool MsgPeriodTryTime::has_exe_period() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPeriodTryTime::set_has_exe_period() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPeriodTryTime::clear_has_exe_period() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPeriodTryTime::clear_exe_period() {
  exe_period_ = 0u;
  clear_has_exe_period();
}
inline ::google::protobuf::uint32 MsgPeriodTryTime::exe_period() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgPeriodTryTime.exe_period)
  return exe_period_;
}
inline void MsgPeriodTryTime::set_exe_period(::google::protobuf::uint32 value) {
  set_has_exe_period();
  exe_period_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgPeriodTryTime.exe_period)
}

// required uint32 try_time = 4;
inline bool MsgPeriodTryTime::has_try_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPeriodTryTime::set_has_try_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPeriodTryTime::clear_has_try_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPeriodTryTime::clear_try_time() {
  try_time_ = 0u;
  clear_has_try_time();
}
inline ::google::protobuf::uint32 MsgPeriodTryTime::try_time() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgPeriodTryTime.try_time)
  return try_time_;
}
inline void MsgPeriodTryTime::set_try_time(::google::protobuf::uint32 value) {
  set_has_try_time();
  try_time_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgPeriodTryTime.try_time)
}

// -------------------------------------------------------------------

// MsgResult

// required uint32 throughput = 1;
inline bool MsgResult::has_throughput() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgResult::set_has_throughput() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgResult::clear_has_throughput() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgResult::clear_throughput() {
  throughput_ = 0u;
  clear_has_throughput();
}
inline ::google::protobuf::uint32 MsgResult::throughput() const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgResult.throughput)
  return throughput_;
}
inline void MsgResult::set_throughput(::google::protobuf::uint32 value) {
  set_has_throughput();
  throughput_ = value;
  // @@protoc_insertion_point(field_set:ndnpaxos.MsgResult.throughput)
}

// repeated .ndnpaxos.MsgPeriodTryTime msg_ptt = 2;
inline int MsgResult::msg_ptt_size() const {
  return msg_ptt_.size();
}
inline void MsgResult::clear_msg_ptt() {
  msg_ptt_.Clear();
}
inline const ::ndnpaxos::MsgPeriodTryTime& MsgResult::msg_ptt(int index) const {
  // @@protoc_insertion_point(field_get:ndnpaxos.MsgResult.msg_ptt)
  return msg_ptt_.Get(index);
}
inline ::ndnpaxos::MsgPeriodTryTime* MsgResult::mutable_msg_ptt(int index) {
  // @@protoc_insertion_point(field_mutable:ndnpaxos.MsgResult.msg_ptt)
  return msg_ptt_.Mutable(index);
}
inline ::ndnpaxos::MsgPeriodTryTime* MsgResult::add_msg_ptt() {
  // @@protoc_insertion_point(field_add:ndnpaxos.MsgResult.msg_ptt)
  return msg_ptt_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ndnpaxos::MsgPeriodTryTime >*
MsgResult::mutable_msg_ptt() {
  // @@protoc_insertion_point(field_mutable_list:ndnpaxos.MsgResult.msg_ptt)
  return &msg_ptt_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ndnpaxos::MsgPeriodTryTime >&
MsgResult::msg_ptt() const {
  // @@protoc_insertion_point(field_list:ndnpaxos.MsgResult.msg_ptt)
  return msg_ptt_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndnpaxos

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ndnpaxos::MsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ndnpaxos::MsgType>() {
  return ::ndnpaxos::MsgType_descriptor();
}
template <> struct is_proto_enum< ::ndnpaxos::CmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ndnpaxos::CmdType>() {
  return ::ndnpaxos::CmdType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ndnpaxos_2eproto__INCLUDED
